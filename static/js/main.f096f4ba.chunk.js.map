{"version":3,"sources":["reportWebVitals.js","components/BTCTracker.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BTCTracker","props","state","loading","bpi","USD","rate","EUR","GBP","lastFetch","this","fetch","context","setInterval","response","json","setState","time","updated","className","Dimmer","active","inverted","Loader","size","Card","image","header","meta","description","React","Component","App","useEffect","document","getElementById","play","src","autoplay","muted","loop","id","ReactDOM","render","StrictMode"],"mappings":"+LAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2ECHOQ,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAQ,EACRC,IAAK,CACHC,IAAI,CACFC,KAAK,GAEPC,IAAK,CACHD,KAAK,GAEPE,IAAK,CACHF,KAAK,IAGTG,UAAW,IAhBI,E,qDAoBnB,WACEC,KAAKC,U,iIAGP,WACE,IAAIC,EAAUF,KAEdG,aAAY,WAEVF,MAAM,qDACHjB,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,UAC1BrB,MAAK,SAAAoB,GAAQ,OAAIF,EAAQI,SAAS,CACjCZ,IAAKU,EAASV,IACdK,UAAWK,EAASG,KAAKC,QACzBf,SAAQ,SAEX,S,oBAGL,WACE,OACE,sBAAKgB,UAAU,YAAf,UACE,cAACC,EAAA,EAAD,CAAQC,OAAQX,KAAKR,MAAMC,QAASmB,UAAQ,EAA5C,SACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAb,0BAEF,cAACC,EAAA,EAAD,CACEC,MAAM,qBACNC,OAASjB,KAAKR,MAAME,IAAIC,IAAIC,KAC5BsB,KAAK,MACLC,YAAenB,KAAKR,MAAMO,YAE5B,cAACgB,EAAA,EAAD,CACEC,MAAM,mBACNC,OAASjB,KAAKR,MAAME,IAAIG,IAAID,KAC5BsB,KAAK,MACLC,YAAenB,KAAKR,MAAMO,YAE5B,cAACgB,EAAA,EAAD,CACEC,MAAM,kBACNC,OAASjB,KAAKR,MAAME,IAAII,IAAIF,KAC5BsB,KAAK,MACLC,YAAenB,KAAKR,MAAMO,mB,GA9DIqB,IAAMC,WCa/BC,MAbf,WAIE,OAHAC,qBAAU,WACRC,SAASC,eAAe,UAAUC,SAClC,IAEA,gCACI,uBAAOC,IAAI,kBAAkBC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACrB,UAAU,QAAQsB,GAAG,WACtE,cAAC,EAAD,QCJRC,IAASC,OAET,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAGFV,SAASC,eAAe,SAM1B5C,M","file":"static/js/main.f096f4ba.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Card,Dimmer,Loader } from 'semantic-ui-react';\n\n\nexport default class BTCTracker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading:true,\n      bpi: {\n        USD:{\n          rate:0.00\n        },\n        EUR :{\n          rate:0.00\n        },\n        GBP :{\n          rate:0.00\n        }\n      },\n      lastFetch: \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n  \n  fetch() {\n    var context = this;\n\n    setInterval(function() {\n      \n      fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\")\n        .then(response => response.json())\n        .then(response => context.setState({\n          bpi: response.bpi,\n          lastFetch: response.time.updated,\n          loading:false\n        }))\n    }, 3000);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Dimmer active={this.state.loading} inverted>\n          <Loader size='large'>Loading...</Loader>\n        </Dimmer>\n        <Card\n          image='/images/dollar.jpg'\n          header= {this.state.bpi.USD.rate}\n          meta='USD'\n          description = {this.state.lastFetch}\n        />\n        <Card\n          image='/images/euro.jpg'\n          header= {this.state.bpi.EUR.rate}\n          meta='EUR'\n          description = {this.state.lastFetch}\n        />\n        <Card\n          image='/images/gbs.jpg'\n          header= {this.state.bpi.GBP.rate}\n          meta='GBP'\n          description = {this.state.lastFetch}\n        />\n      </div>\n      \n    );\n  }\n}","import './App.css';\nimport React,{useEffect} from 'react';\nimport BTCTracker from './components/BTCTracker'\n\nfunction App() {\n  useEffect(() => {\n    document.getElementById('video1').play()\n  },[]);\n  return (\n    <div>\n        <video src=\"/images/btc.mp4\" autoplay muted loop className=\"video\" id=\"video1\"></video>\n        <BTCTracker />\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\n\nReactDOM.render(\n  \n<React.StrictMode>\n    <App/>\n      \n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}